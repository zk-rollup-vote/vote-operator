name: Deploy to Server

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "yarn"

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run tests (if any)
        run: |
          if [ -f "package.json" ] && grep -q '"test"' package.json; then
            yarn test
          else
            echo "No tests found, skipping..."
          fi

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: ${{ secrets.PORT || '22' }}
          script: |
            # Navigate to application directory
            cd "${{ secrets.DEPLOY_PATH || '/opt/vote-operator' }}"

            # Pull latest changes
            git pull origin main

            # Install/update dependencies
            yarn install --production --frozen-lockfile

            # Copy environment variables if production env file exists
            if [ -f ".env.production" ]; then
              cp .env.production .env
              echo "Using production environment variables"
            else
              echo "No .env.production found, using existing .env"
            fi

            # Restart the application using PM2
            if command -v pm2 >/dev/null 2>&1; then
              echo "Restarting application with PM2..."
              pm2 reload vote-operator || pm2 start index.js --name vote-operator
            else
              # Alternative: restart using systemd if PM2 is not available
              echo "Attempting to restart with systemd..."
              sudo systemctl restart vote-operator 2>/dev/null || echo "Service restart failed or not configured"
              
              # If neither PM2 nor systemd, try to kill existing process and start new one
              if ! sudo systemctl is-active vote-operator >/dev/null 2>&1; then
                echo "Manually restarting application..."
                pkill -f "node.*index.js" || true
                nohup node index.js > app.log 2>&1 &
              fi
            fi

            # Wait for application to start
            sleep 5

            # Health check
            APP_PORT="${{ secrets.APP_PORT || '5001' }}"
            if curl -f http://localhost:$APP_PORT/ >/dev/null 2>&1; then
              echo "✅ Application is running and responding"
            else
              echo "⚠️ Health check failed - application may not be responding"
            fi

      - name: Notify deployment status
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ Deployment completed successfully!"
          else
            echo "❌ Deployment failed!"
            exit 1
          fi
